@page
@model SRAUMOAR.Pages.portal.estudiante.IndexModel
@{
}
<div class="container py-4">

    @if (Model.Arancel.Any(a => !Model.DetallesCobroArancel
    .Any(dc => dc.ArancelId == a.ArancelId && dc.CobroArancel.AlumnoId == Model.Alumno.AlumnoId)
    && (a.FechaFin < DateTime.Now)))
    {
        <div class="aranceles-alert-compact mb-3">
            <div class="alert-header-compact">
                <div class="alert-icon-compact">
                    <i class="bi bi-exclamation-triangle-fill"></i>
                </div>
                <div class="alert-title-compact">
                    <h6 class="mb-0">⚠️ Aranceles Vencidos</h6>
                    <small class="text-muted">Pagos pendientes que requieren atención</small>
                </div>
            </div>
            
            <div class="aranceles-list">
                @{
                    var arancelesVencidos = Model.Arancel
                    .Where(a => !Model.DetallesCobroArancel
                    .Any(dc => dc.ArancelId == a.ArancelId && dc.CobroArancel.AlumnoId == Model.Alumno.AlumnoId)
                    && (a.FechaFin < DateTime.Now))
                    .OrderBy(a => a.FechaFin)
                    .ToList();
                }

                @foreach (var item in arancelesVencidos)
                {
                    var diasAtraso = item.FechaFin.HasValue ? (DateTime.Now - item.FechaFin.Value).Days : 0;
                    var urgenciaClass = diasAtraso > 30 ? "urgente" : diasAtraso > 15 ? "alto" : "medio";

                    <div class="arancel-item @urgenciaClass">
                        <div class="arancel-info-compact">
                            <div class="arancel-main">
                                <h6 class="arancel-nombre-compact">@item.Nombre</h6>
                                <div class="arancel-details">
                                    <span class="dias-atraso-compact @urgenciaClass">
                                        <i class="bi bi-clock-history me-1"></i>
                                        @diasAtraso días atrasado
                                    </span>
                                    <span class="fecha-vencimiento">
                                        <i class="bi bi-calendar-event me-1"></i>
                                        @(item.FechaFin?.ToString("dd/MM/yyyy") ?? "Sin fecha")
                                    </span>
                                                                     @if (item.Costo > 0)
                                 {
                                     <span class="monto">
                                         <i class="bi bi-cash-coin me-1"></i>
                                         @if (item.EstaVencido && item.ValorMora > 0)
                                         {
                                             <span class="monto-con-mora">
                                                 <span class="costo-original">$@item.Costo.ToString("N2")</span>
                                                 <span class="mora-adicional">+ $@item.ValorMora.ToString("N2") mora</span>
                                                 <span class="total-mora">= $@item.TotalConMora.ToString("N2")</span>
                                             </span>
                                         }
                                         else
                                         {
                                             <span>$@item.Costo.ToString("N2")</span>
                                         }
                                     </span>
                                 }
                                </div>
                            </div>
                            <div class="arancel-actions-compact">
                                <span class="badge-urgencia @urgenciaClass">
                                    @if (diasAtraso > 30)
                                    {
                                        <span>CRÍTICO</span>
                                    }
                                    else if (diasAtraso > 15)
                                    {
                                        <span>ALTO</span>
                                    }
                                    else
                                    {
                                        <span>MEDIO</span>
                                    }
                                    @if (item.EstaVencido && item.ValorMora > 0)
                                    {
                                        <span class="mora-indicator">+ MORA</span>
                                    }
                                </span>
                               @*  <button class="btn-pagar-compact" onclick="location.href='@Url.Action("PagarArancel", "Pagos", new { id = item.ArancelId })'">
                                    <i class="bi bi-credit-card"></i>
                                    Pagar
                                </button> *@
                            </div>
                        </div>
                    </div>
                }
            </div>
            
            <div class="alert-footer-compact">
                <small class="text-muted">
                    <i class="bi bi-info-circle me-1"></i>
                    Los aranceles vencidos pueden generar recargos adicionales
                    @if (arancelesVencidos.Any(a => a.EstaVencido && a.ValorMora > 0))
                    {
                        <span class="text-danger fw-bold"> • Se aplicará mora por atraso</span>
                    }
                </small>
            </div>
        </div>
    }


    <!-- Carnet Digital -->
    <div class="row">
        <!-- Carnet Digital - Ajustado a col-md-6 -->
        <div class="col-md-6">
            <div class="card mb-4 carnet-digital h-100">
                <div class="card-header bg-success text-white py-3">
                    <h4 class="text-center mb-0">@(Model?.Alumno?.Nombres ?? "No disponible") @(Model?.Alumno?.Apellidos ?? "")</h4>
                </div>
                <div class="card-body p-0">
                    <div class="row g-0">
                        <div class="col-md-4">
                            <div class="p-3">
                                                                 <div class="foto-container">
                                     <div class="foto-wrapper position-relative">
                                         @if (Model.Alumno.Foto != null)
                                         {
                                             <img src="data:image/jpeg;base64,@Convert.ToBase64String(Model.Alumno.Foto)" alt="Foto Estudiante" class="img-fluid rounded-circle border border-3 border-primary" />
                                         }
                                         else
                                         {
                                             <img src="~/images/default.PNG" alt="Foto Estudiante" class="img-fluid rounded-circle border border-3 border-primary" />
                                         }
                                         <button type="button" class="btn btn-sm btn-primary foto-edit-btn" data-bs-toggle="modal" data-bs-target="#editarFotoModal" title="Cambiar foto">
                                             <i class="bi bi-camera"></i>
                                         </button>
                                     </div>
                                 </div>
                            </div>
                        </div>
                        <div class="col-md-8">
                            <div class="p-3">
                                <div class="student-info">
                                    <p class="mb-2">
                                        <i class="bi bi-person-badge me-2"></i>
                                        Carné: @(Model?.Alumno?.Carnet ?? "No disponible")
                                    </p>
                                    <p class="mb-2">
                                        <i class="bi bi-mortarboard-fill me-2"></i>
                                        Carrera: @(Model?.Alumno?.Carrera?.NombreCarrera ?? "No disponible")
                                    </p>
                                    <p class="mb-2">
                                        <i class="bi bi-calendar3 me-2"></i>
                                        Ciclo: @(Model?.Ciclo?.NCiclo ?? 0) - @(Model?.Ciclo?.anio.ToString() ?? "")
                                    </p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Nueva Tarjeta de Progreso -->
        <div class="col-md-6">
            <div class="card mb-4 h-100">
                <div class="card-header bg-primary text-white py-3">
                    <h4 class="text-center mb-0">Progreso Académico</h4>
                </div>
                <div class="card-body">
                    <div class="text-center mb-4">
                        <div class="progress-circle">
                            <div class="progress-circle-inner">
                                <div class="progress-percentage">
                                    0%
                                </div>
                                <div class="progress-label">
                                    Avance en la Carrera
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="progress-stats">
                        <p class="text-center text-danger">Sección en proceso de actualización</p>
                        <div class="row text-center">
                            <div class="col-4">
                                <h5 class="mb-1">0</h5>
                                <small class="text-muted">Materias Aprobadas</small>
                            </div>
                            <div class="col-4">
                                <h5 class="mb-1">0</h5>
                                <small class="text-muted">Total Materias</small>
                            </div>
                            <div class="col-4">
                                <h5 class="mb-1">0</h5>
                                <small class="text-muted">Promedio Global</small>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Materias Inscritas -->
    <div class="card shadow-sm">
        <div class="card-header bg-white p-0">
            <!-- Nav tabs -->
            <ul class="nav nav-tabs" role="tablist">
                <li class="nav-item" role="presentation">
                    <button class="nav-link active px-4 py-3" data-bs-toggle="tab" data-bs-target="#materias" type="button" role="tab">
                        <i class="bi bi-journal-text me-2"></i>Materias Inscritas
                    </button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link px-4 py-3" data-bs-toggle="tab" data-bs-target="#aranceles" type="button" role="tab">
                        <i class="bi bi-cash-coin me-2"></i>Aranceles del ciclo
                    </button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link px-4 py-3" data-bs-toggle="tab" data-bs-target="#calendario" type="button" role="tab">
                        <i class="bi bi-calendar3 me-2"></i>Calendario Académico
                    </button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link px-4 py-3" data-bs-toggle="tab" data-bs-target="#historial" type="button" role="tab">
                        <i class="bi bi-journal-text me-2"></i>Mi Historial
                    </button>
                </li>
            </ul>
        </div>

        <!-- Tab content -->
        <div class="tab-content">
            <!-- Tab Materias Inscritas -->
            <div class="tab-pane fade show active" id="materias" role="tabpanel">
                <div class="card-body">
                    <div class="table-responsive">
                        
                            <table class="table table-hover align-middle">
                                <thead class="table-light">
                                    <tr>
                                        <th>Código</th>
                                        <th>Materia</th>
                                        <th>Docente</th>
                                        <th>Horario</th>
                                        <th>Aula</th>
                                        <th class="text-center">Nota Promedio</th>
                                        <th class="text-center">Estado</th>
                                        <th class="text-center">Notas</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var materia in Model.MateriasInscritas)
                                    {
                                        <tr>
                                            <td>@materia.MateriasGrupo.Materia.CodigoMateria</td>
                                        <td>@materia.MateriasGrupo.Materia.NombreMateria - @materia.MateriasGrupo.Grupo.Nombre </td>
                                            <td>@materia.MateriasGrupo.Docente.Nombres  @materia.MateriasGrupo.Docente.Apellidos </td>
                                            <td>@materia.MateriasGrupo.FormatearHora12Horas(materia.MateriasGrupo.HoraInicio) - @materia.MateriasGrupo.FormatearHora12Horas(materia.MateriasGrupo.HoraFin)</td>
                                            <td>@materia.MateriasGrupo.Aula</td>
                                            <td class="text-center">
                                                <span class="badge bg-primary rounded-pill px-3 py-2">
                                                    @(materia.NotaPromedio.ToString("N1") ?? "N/A")
                                                </span>
                                            </td>
                                            <td class="text-center">
                                                @if (materia.NotaPromedio >= 6)
                                                {
                                                    <span class="badge bg-success">Aprobado</span>
                                                }
                                                else
                                                {
                                                    <span class="badge bg-danger">En Riesgo</span>
                                                }
                                            </td>
                                            <td class="text-center">
                                                <button type="button" class="btn btn-outline-primary btn-sm" data-bs-toggle="modal" data-bs-target="#modalNotas_@materia.MateriasInscritasId">
                                                    Ver notas
                                                </button>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                            @* Renderizar modales fuera de la tabla para evitar problemas de maquetado *@
                            @foreach (var materia in Model.MateriasInscritas)
                            {
                                <div class="modal fade" id="modalNotas_@materia.MateriasInscritasId" tabindex="-1" aria-labelledby="modalNotasLabel_@materia.MateriasInscritasId" aria-hidden="true">
                                    <div class="modal-dialog modal-lg modal-dialog-scrollable">
                                        <div class="modal-content">
                                            <div class="modal-header">
                                                <h5 class="modal-title" id="modalNotasLabel_@materia.MateriasInscritasId">
                                                    Notas - @materia.MateriasGrupo.Materia.NombreMateria (@materia.MateriasGrupo.Grupo.Nombre)
                                                </h5>
                                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                            </div>
                                            <div class="modal-body">
                                                @if (materia.Notas != null && materia.Notas.Any())
                                                {
                                                    <div class="table-responsive">
                                                        <table class="table table-sm align-middle">
                                                            <thead class="table-light">
                                                                <tr>
                                                                    <th>Actividad</th>
                                                                    <th>Tipo</th>
                                                                    <th class="text-center">Porcentaje</th>
                                                                    <th class="text-center">Nota</th>
                                                                    <th class="text-center">Fecha registro</th>
                                                                </tr>
                                                            </thead>
                                                            <tbody>
                                                                @foreach (var n in (materia.Notas?.OrderBy(x => x.ActividadAcademica != null ? x.ActividadAcademica.FechaInicio : DateTime.MaxValue) ?? Enumerable.Empty<SRAUMOAR.Entidades.Procesos.Notas>()))
                                                                {
                                                                    <tr>
                                                                        <td>@(n.ActividadAcademica?.Nombre ?? "-")</td>
                                                                        <td>@(n.ActividadAcademica?.GetNombreTipo() ?? "-")</td>
                                                                        <td class="text-center">@(n.ActividadAcademica?.Porcentaje ?? 0)%</td>
                                                                        <td class="text-center">@n.Nota.ToString("N1")</td>
                                                                        <td class="text-center">@n.FechaRegistro.ToString("dd/MM/yyyy")</td>
                                                                    </tr>
                                                                }
                                                            </tbody>
                                                        </table>
                                                    </div>
                                                }
                                                else
                                                {
                                                    <div class="text-center text-muted">Sin notas registradas.</div>
                                                }
                                            </div>
                                            <div class="modal-footer">
                                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                    </div>
                </div>
            </div>

            <!-- Tab Aranceles -->
            <div class="tab-pane fade" id="aranceles" role="tabpanel">
                <div class="card-body">
                    <!-- Aquí va el contenido de Aranceles -->
                    <table class="table">
                        <thead>
                            <tr>
                                <th>@Html.DisplayNameFor(model => model.Arancel[0].Nombre)</th>
                                <th>@Html.DisplayNameFor(model => model.Arancel[0].Costo)</th>
                                <th>@Html.DisplayNameFor(model => model.Arancel[0].FechaInicio)</th>
                                <th>@Html.DisplayNameFor(model => model.Arancel[0].FechaFin)</th>
                                <th>@Html.DisplayNameFor(model => model.Arancel[0].Ciclo)</th>
                                <th>Estado</th> <!-- Nueva columna -->
                                
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.Arancel)
                            {
                                var arancelPagado = Model.DetallesCobroArancel
                                .Any(dc => dc.ArancelId == item.ArancelId && dc.CobroArancel.AlumnoId == Model.Alumno.AlumnoId);
                                var diasRestantes = item.FechaFin.HasValue ? (item.FechaFin.Value - DateTime.Now).Days : 0;
                                var diasAtraso = item.FechaFin.HasValue ? (DateTime.Now - item.FechaFin.Value).Days : 0;
                                var cobroArancelId = Model.DetallesCobroArancel
                                .Where(dc => dc.ArancelId == item.ArancelId && dc.CobroArancel.AlumnoId == Model.Alumno.AlumnoId)
                                .Select(dc => dc.CobroArancelId)
                                .FirstOrDefault();

                                <tr>
                                    <td>@Html.DisplayFor(modelItem => item.Nombre)</td>
                                    <td>$ @Html.DisplayFor(modelItem => item.Costo)</td>
                                    <td>@(item.FechaInicio?.ToString("dd/MM/yyyy") ?? "No definida")</td>
                                    <td>@(item.FechaFin?.ToString("dd/MM/yyyy") ?? "No definida")</td>
                                    <td>@(item.Ciclo != null ? $"{item.Ciclo.NCiclo} - {item.Ciclo.anio}" : "No asignado")</td>
                                    <td>
                                        @if (arancelPagado)
                                        {
                                            <span class="text-success">Pagado</span>
                                            <button class="btn btn-outline-danger btn-sm" onclick="verPDF(@cobroArancelId)" title="Ver PDF">
                                                PDF
                                            </button>
                                        }
                                        else
                                        {
                                            <span class="text-danger">Pendiente</span>
                                        }
                                    </td>
                                    <td>
                                        @if (item.FechaFin.HasValue)
                                        {
                                            if (diasRestantes > 0)
                                            {
                                                if (!arancelPagado)
                                                {
                                                    <span class="text-info">Faltan @diasRestantes días</span>
                                                }
                                            }
                                            else
                                            {
                                                if (!arancelPagado)
                                                {
                                                    <span class="text-danger">Atrasado @diasAtraso días</span>
                                                }
                                            }
                                        }
                                        else
                                        {
                                            <span class="text-muted">Sin fecha límite</span>
                                        }
                                    </td>
                                   
                                </tr>
                            }
                        </tbody>
                    </table>

                    <!-- FIN -->
                </div>
            </div>

            <!-- Tab Calendario -->
            <div class="tab-pane fade" id="calendario" role="tabpanel">
                <div class="card-body">
                    <!-- Aquí va el contenido del Calendario -->
                    <table class="table">
                        <thead>
                            <tr class="table-dark">
                                <th>@Html.DisplayNameFor(model => model.ActividadAcademica[0].Ciclo)</th>
                                <th>@Html.DisplayNameFor(model => model.ActividadAcademica[0].Nombre)</th>
                                <th>@Html.DisplayNameFor(model => model.ActividadAcademica[0].TipoActividad)</th>
                                <th>@Html.DisplayNameFor(model => model.ActividadAcademica[0].FechaInicio)</th>
                                <th>@Html.DisplayNameFor(model => model.ActividadAcademica[0].FechaFin)</th>
                                <th>@Html.DisplayNameFor(model => model.ActividadAcademica[0].Arancel)</th>
                                <th>@Html.DisplayNameFor(model => model.ActividadAcademica[0].Porcentaje)</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.ActividadAcademica)
                            {
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Ciclo.NCiclo) / @Html.DisplayFor(modelItem => item.Ciclo.anio)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Nombre)
                                    </td>
                                    <td>
                                        @item.GetNombreTipo()
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.FechaInicio)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.FechaFin)
                                    </td>
                                    <td>
                                        @(item.Arancel?.Nombre ?? "Sin arancel")
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Porcentaje)%
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>

                </div>
            </div>

            <!-- Tab Historial Académico -->
            <div class="tab-pane fade" id="historial" role="tabpanel">
                <div class="card-body">
                    <div class="text-center py-4">
                        <i class="bi bi-journal-text text-primary" style="font-size: 3rem;"></i>
                        <h4 class="mt-3 mb-3">Historial Académico</h4>
                        <p class="text-muted mb-4">Consulta tu historial completo de calificaciones y progreso académico</p>
                        <a href="/portal/estudiante/MiHistorial" class="btn btn-primary btn-lg">
                            <i class="bi bi-arrow-right-circle me-2"></i>
                            Ver Mi Historial Completo
                        </a>
                    </div>
                    
                    <!-- Vista previa del historial -->
                   @*  <div class="row mt-4">
                        <div class="col-md-6">
                            <div class="card border-0 shadow-sm">
                                <div class="card-header bg-info text-white">
                                    <h6 class="mb-0">
                                        <i class="bi bi-graph-up me-2"></i>
                                        Resumen Académico
                                    </h6>
                                </div>
                                <div class="card-body text-center">
                                    <div class="row">
                                        <div class="col-6">
                                            <h3 class="text-primary mb-1">0</h3>
                                            <small class="text-muted">Materias Aprobadas</small>
                                        </div>
                                        <div class="col-6">
                                            <h3 class="text-success mb-1">0.00</h3>
                                            <small class="text-muted">Promedio General</small>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="card border-0 shadow-sm">
                                <div class="card-header bg-warning text-white">
                                    <h6 class="mb-0">
                                        <i class="bi bi-calendar-check me-2"></i>
                                        Último Ciclo
                                    </h6>
                                </div>
                                <div class="card-body text-center">
                                    <h5 class="mb-2">Sin datos</h5>
                                    <small class="text-muted">No hay información disponible</small>
                                </div>
                            </div>
                        </div>
                    </div> *@
                </div>
            </div>
        </div>
    </div>


    


 </div>

<!-- Modal para editar foto -->
<div class="modal fade" id="editarFotoModal" tabindex="-1" aria-labelledby="editarFotoModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editarFotoModalLabel">
                    <i class="bi bi-camera me-2"></i>Actualizar Foto de Perfil
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="formActualizarFoto" enctype="multipart/form-data">
                @Html.AntiForgeryToken()
                <div class="modal-body">
                    <div class="text-center mb-4">
                        <div class="foto-preview-container">
                            <img id="fotoPreview" src="@(Model.Alumno.Foto != null ? $"data:image/jpeg;base64,{Convert.ToBase64String(Model.Alumno.Foto)}" : "/images/default.PNG")" 
                                 alt="Vista previa" class="img-fluid rounded-circle border border-3 border-primary" style="width: 150px; height: 150px; object-fit: cover;" />
                        </div>
                    </div>
                    
                    <div class="mb-3">
                        <label for="nuevaFoto" class="form-label">Seleccionar nueva foto:</label>
                        <input type="file" class="form-control" id="nuevaFoto" name="nuevaFoto" accept="image/*" required>
                        <div class="form-text">
                            Formatos permitidos: JPG, PNG. Tamaño máximo: 5MB (se optimizará automáticamente)
                        </div>
                    </div>
                    
                                         <div class="alert alert-info">
                         <i class="bi bi-info-circle me-2"></i>
                         <small>
                             <strong>Recomendaciones:</strong><br>
                             • Usa una foto clara y bien iluminada<br>
                             • Fondo neutro y sin distracciones<br>
                             • La foto se optimizará automáticamente a 300x300 píxeles<br>
                             • Se comprimirá para reducir el tamaño de almacenamiento
                         </small>
                     </div>
                     
                     <div id="optimizationInfo" class="alert alert-success d-none">
                         <i class="bi bi-check-circle me-2"></i>
                         <small>
                             <strong>Optimización:</strong><br>
                             <span id="optimizationDetails">La imagen se optimizará automáticamente</span>
                         </small>
                     </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="submit" class="btn btn-primary" id="btnGuardarFoto">
                        <i class="bi bi-check-circle me-2"></i>Guardar Cambios
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
<script>
    // Función para ver PDF
    function verPDF(id) {
        // Mostrar indicador de carga
        const button = event.target;
        const originalText = button.innerHTML;
        button.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Generando...';
        button.disabled = true;

        // Hacer la llamada al método para generar el PDF
        window.open(`@Url.Page("./Facturas")?handler=GenerarPdf&id=${id}`, '_blank');

        // Restaurar el botón después de un breve delay
        setTimeout(() => {
            button.innerHTML = originalText;
            button.disabled = false;
        }, 2000);
    }

    // Funcionalidad para actualizar foto
    document.addEventListener('DOMContentLoaded', function() {
        const inputFoto = document.getElementById('nuevaFoto');
        const fotoPreview = document.getElementById('fotoPreview');
        const formActualizarFoto = document.getElementById('formActualizarFoto');
        const btnGuardarFoto = document.getElementById('btnGuardarFoto');

        // Vista previa de la imagen seleccionada
        inputFoto.addEventListener('change', function(e) {
            const file = e.target.files[0];
            if (file) {
                // Validar tamaño (5MB máximo)
                if (file.size > 5 * 1024 * 1024) {
                    alert('La imagen es demasiado grande. El tamaño máximo es 5MB.');
                    inputFoto.value = '';
                    return;
                }

                // Validar tipo de archivo
                if (!file.type.startsWith('image/')) {
                    alert('Por favor selecciona un archivo de imagen válido.');
                    inputFoto.value = '';
                    return;
                }

                // Mostrar información de optimización
                const fileSizeKB = (file.size / 1024).toFixed(1);
                const optimizationInfo = document.getElementById('optimizationInfo');
                const optimizationDetails = document.getElementById('optimizationDetails');
                
                optimizationDetails.innerHTML = `Imagen seleccionada: ${fileSizeKB} KB<br>Se optimizará a 300x300 píxeles y se comprimirá`;
                optimizationInfo.classList.remove('d-none');

                // Mostrar vista previa
                const reader = new FileReader();
                reader.onload = function(e) {
                    fotoPreview.src = e.target.result;
                };
                reader.readAsDataURL(file);
            }
        });

        // Envío del formulario
        formActualizarFoto.addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const formData = new FormData();
            const file = inputFoto.files[0];
            
            if (!file) {
                alert('Por favor selecciona una imagen.');
                return;
            }

            formData.append('nuevaFoto', file);

            // Deshabilitar botón y mostrar loading
            btnGuardarFoto.disabled = true;
            const originalText = btnGuardarFoto.innerHTML;
            btnGuardarFoto.innerHTML = '<i class="bi bi-arrow-clockwise me-2"></i>Guardando...';

            try {
                // Agregar el token CSRF al FormData
                const token = document.querySelector('input[name="__RequestVerificationToken"]').value;
                formData.append('__RequestVerificationToken', token);
                
                const response = await fetch('/portal/estudiante/Index?handler=ActualizarFoto', {
                    method: 'POST',
                    body: formData
                });

                if (response.ok) {
                    const result = await response.json();
                    if (result.success) {
                        // Actualizar la foto en el carnet
                        const fotoCarnet = document.querySelector('.foto-container img');
                        if (fotoCarnet) {
                            fotoCarnet.src = fotoPreview.src;
                        }
                        
                        // Mostrar mensaje de éxito con información del tamaño
                        alert(result.message || '¡Foto actualizada exitosamente!');
                        
                        // Cerrar modal
                        const modal = bootstrap.Modal.getInstance(document.getElementById('editarFotoModal'));
                        modal.hide();
                        
                        // Limpiar formulario
                        formActualizarFoto.reset();
                        fotoPreview.src = '@(Model.Alumno.Foto != null ? $"data:image/jpeg;base64,{Convert.ToBase64String(Model.Alumno.Foto)}" : "/images/default.PNG")';
                        
                        // Ocultar información de optimización
                        document.getElementById('optimizationInfo').classList.add('d-none');
                    } else {
                        alert('Error al actualizar la foto: ' + (result.message || 'Error desconocido'));
                    }
                } else {
                    alert('Error en la comunicación con el servidor.');
                }
            } catch (error) {
                console.error('Error:', error);
                alert('Error al procesar la solicitud.');
            } finally {
                // Restaurar botón
                btnGuardarFoto.disabled = false;
                btnGuardarFoto.innerHTML = originalText;
            }
        });
    });
</script>
}
<style>
    .carnet-digital {
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        border: none;
        overflow: hidden;
    }

    .foto-container {
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .student-info p {
        color: #666;
        font-size: 0.95rem;
    }

    .badge {
        font-weight: 500;
    }
</style>

<style>
    .progress-circle {
        width: 200px;
        height: 200px;
        border-radius: 50%;
        background: conic-gradient(green 0%, #e9ecef 0);
        position: relative;
        margin: 0 auto;
    }

    .progress-circle-inner {
        position: absolute;
        width: 160px;
        height: 160px;
        background: white;
        border-radius: 50%;
        top: 20px;
        left: 20px;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
    }

    .progress-percentage {
        font-size: 2.5rem;
        font-weight: bold;
        color: #0d6efd;
    }

    .progress-label {
        font-size: 0.9rem;
        color: #6c757d;
    }

    .progress-stats {
        margin-top: 2rem;
        padding-top: 1rem;
        border-top: 1px solid #dee2e6;
    }

    .carnet-digital {
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    .foto-container {
        display: flex;
        justify-content: center;
        align-items: center;
    }
    
    .foto-wrapper {
        position: relative;
        display: inline-block;
    }
    
    .foto-edit-btn {
        position: absolute;
        bottom: 0;
        right: 0;
        width: 32px;
        height: 32px;
        border-radius: 50%;
        padding: 0;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 0.8rem;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
        transition: all 0.2s ease;
    }
    
    .foto-edit-btn:hover {
        transform: scale(1.1);
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
    }
    
    .foto-preview-container {
        display: flex;
        justify-content: center;
        align-items: center;
        margin-bottom: 1rem;
    }

    .student-info p {
        color: #666;
        font-size: 0.95rem;
    }
</style>

<style>
    /* Estilos compactos para las alertas de aranceles vencidos */
    .aranceles-alert-compact {
        background: #fff;
        border: 1px solid #fecaca;
        border-radius: 12px;
        overflow: hidden;
        box-shadow: 0 2px 8px rgba(254, 178, 178, 0.15);
    }
    
    .alert-header-compact {
        background: linear-gradient(135deg, #fee2e2 0%, #fecaca 100%);
        padding: 0.75rem 1rem;
        display: flex;
        align-items: center;
        gap: 0.75rem;
        border-bottom: 1px solid #fecaca;
    }
    
    .alert-icon-compact {
        background: #dc2626;
        color: white;
        border-radius: 50%;
        width: 32px;
        height: 32px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 0.9rem;
    }
    
    .alert-title-compact h6 {
        color: #991b1b;
        font-weight: 600;
        margin: 0;
        font-size: 0.95rem;
    }
    
    .alert-title-compact small {
        font-size: 0.8rem;
    }
    
    .aranceles-list {
        padding: 0.5rem;
    }
    
    .arancel-item {
        background: #fef2f2;
        border-radius: 8px;
        margin-bottom: 0.5rem;
        border-left: 4px solid var(--item-color);
        transition: all 0.2s ease;
    }
    
    .arancel-item.medio {
        --item-color: #f59e0b;
        background: #fffbeb;
    }
    
    .arancel-item.alto {
        --item-color: #dc2626;
        background: #fef2f2;
    }
    
    .arancel-item.urgente {
        --item-color: #7c2d12;
        background: #fef2f2;
        animation: subtle-pulse 3s infinite;
    }
    
    @@keyframes subtle-pulse {
        0%, 100% { opacity: 1; }
        50% { opacity: 0.95; }
    }
    
    .arancel-item:hover {
        transform: translateX(2px);
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    }
    
    .arancel-info-compact {
        padding: 0.75rem;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }
    
    .arancel-main {
        flex: 1;
    }
    
    .arancel-nombre-compact {
        color: #1f2937;
        font-size: 0.9rem;
        font-weight: 600;
        margin: 0 0 0.25rem 0;
    }
    
    .arancel-details {
        display: flex;
        gap: 1rem;
        flex-wrap: wrap;
    }
    
    .arancel-details span {
        font-size: 0.75rem;
        color: #6b7280;
        display: flex;
        align-items: center;
    }
    
    .monto-con-mora {
        display: flex;
        flex-direction: column;
        gap: 0.1rem;
        align-items: flex-start;
    }
    
    .costo-original {
        color: #6b7280;
        text-decoration: line-through;
        font-size: 0.7rem;
    }
    
    .mora-adicional {
        color: #dc2626;
        font-weight: 600;
        font-size: 0.7rem;
    }
    
    .total-mora {
        color: #991b1b;
        font-weight: 700;
        font-size: 0.8rem;
    }
    
    .dias-atraso-compact.medio {
        color: #92400e;
        font-weight: 600;
    }
    
    .dias-atraso-compact.alto {
        color: #991b1b;
        font-weight: 600;
    }
    
    .dias-atraso-compact.urgente {
        color: #7f1d1d;
        font-weight: 700;
    }
    
    .arancel-actions-compact {
        display: flex;
        flex-direction: column;
        align-items: flex-end;
        gap: 0.5rem;
    }
    
    .badge-urgencia {
        padding: 0.25rem 0.5rem;
        border-radius: 12px;
        font-size: 0.65rem;
        font-weight: 700;
        text-transform: uppercase;
        letter-spacing: 0.3px;
    }
    
    .badge-urgencia.medio {
        background: #fef3c7;
        color: #92400e;
    }
    
    .badge-urgencia.alto {
        background: #fee2e2;
        color: #991b1b;
    }
    
    .badge-urgencia.urgente {
        background: #fecaca;
        color: #7f1d1d;
    }
    
    .mora-indicator {
        background: #dc2626;
        color: white;
        padding: 0.1rem 0.3rem;
        border-radius: 8px;
        font-size: 0.6rem;
        margin-left: 0.25rem;
        font-weight: 800;
    }
    
    .btn-pagar-compact {
        background: var(--item-color);
        color: white;
        border: none;
        padding: 0.4rem 0.8rem;
        border-radius: 6px;
        font-size: 0.75rem;
        font-weight: 500;
        display: flex;
        align-items: center;
        gap: 0.25rem;
        transition: all 0.2s ease;
        cursor: pointer;
        white-space: nowrap;
    }
    
    .btn-pagar-compact:hover {
        filter: brightness(1.1);
        transform: translateY(-1px);
    }
    
    .alert-footer-compact {
        background: #fef2f2;
        padding: 0.5rem 1rem;
        border-top: 1px solid #fecaca;
        text-align: center;
    }
    
    /* Responsive */
    @@media (max-width: 768px) {
        .arancel-info-compact {
            flex-direction: column;
            align-items: flex-start;
            gap: 0.75rem;
        }
        
        .arancel-actions-compact {
            align-items: flex-start;
            flex-direction: row;
            gap: 0.5rem;
        }
        
        .arancel-details {
            gap: 0.5rem;
        }
    }
</style>