@page
@model SRAUMOAR.Pages.facturas.IndexModel
@{
    ViewData["Title"] = "Gestión de Facturas";
}

<style>
    :root {
        --primary-color: #168026;
        --primary-dark: #0f5c1b;
        --primary-light: #e8f5e8;
        --text-dark: #2c3e50;
        --border-color: #e0e0e0;
        --success-color: #28a745;
        --warning-color: #ffc107;
        --danger-color: #dc3545;
    }

    .page-header {
        background: linear-gradient(135deg, var(--primary-color), var(--primary-dark));
        color: white;
        padding: 2rem 0;
        margin-bottom: 2rem;
        border-radius: 8px;
        box-shadow: 0 4px 6px rgba(0,0,0,0.1);
    }

    .page-title {
        font-size: 2.5rem;
        font-weight: 300;
        margin: 0;
        text-align: center;
    }

    .page-subtitle {
        text-align: center;
        opacity: 0.9;
        margin-top: 0.5rem;
        font-size: 1.1rem;
    }

    .action-bar {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 2rem;
        padding: 1rem;
        background: white;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.05);
    }

    .btn-primary-custom {
        background: var(--primary-color);
        border: none;
        color: white;
        padding: 0.75rem 1.5rem;
        border-radius: 6px;
        text-decoration: none;
        font-weight: 500;
        transition: all 0.3s ease;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
    }

        .btn-primary-custom:hover {
            background: var(--primary-dark);
            color: white;
            text-decoration: none;
            transform: translateY(-1px);
            box-shadow: 0 4px 8px rgba(22, 128, 38, 0.3);
        }

    .export-buttons {
        display: flex;
        gap: 0.5rem;
        align-items: center;
    }

    .export-buttons .btn {
        padding: 0.75rem 1.5rem;
        border-radius: 6px;
        font-weight: 500;
        transition: all 0.3s ease;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
    }

    .export-buttons .btn:hover {
        transform: translateY(-1px);
        box-shadow: 0 4px 8px rgba(0,0,0,0.2);
        text-decoration: none;
    }

    .export-buttons .btn-danger {
        background: #dc3545;
        border-color: #dc3545;
        color: white;
    }

    .export-buttons .btn-danger:hover {
        background: #c82333;
        border-color: #bd2130;
        color: white;
    }

    .export-buttons .btn-success {
        background: #28a745;
        border-color: #28a745;
        color: white;
    }

    .export-buttons .btn-success:hover {
        background: #218838;
        border-color: #1e7e34;
        color: white;
    }

    /* Estilos para alertas */
    .alert {
        border-radius: 8px;
        border: none;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        margin-bottom: 1.5rem;
    }

    .alert-danger {
        background: linear-gradient(135deg, #f8d7da, #f5c6cb);
        color: #721c24;
        border-left: 4px solid #dc3545;
    }

    .alert-success {
        background: linear-gradient(135deg, #d4edda, #c3e6cb);
        color: #155724;
        border-left: 4px solid #28a745;
    }

    .alert .btn-close {
        opacity: 0.7;
    }

    .alert .btn-close:hover {
        opacity: 1;
    }

    .search-box {
        position: relative;
        flex: 1;
        max-width: 400px;
        margin-left: 2rem;
    }

    .search-input {
        width: 100%;
        padding: 0.75rem 1rem 0.75rem 2.5rem;
        border: 2px solid var(--border-color);
        border-radius: 25px;
        font-size: 0.95rem;
        transition: all 0.3s ease;
    }

        .search-input:focus {
            outline: none;
            border-color: var(--primary-color);
            box-shadow: 0 0 0 3px rgba(22, 128, 38, 0.1);
        }

    .search-icon {
        position: absolute;
        left: 0.75rem;
        top: 50%;
        transform: translateY(-50%);
        color: #6c757d;
    }

    .table-container {
        background: white;
        border-radius: 12px;
        overflow: hidden;
        box-shadow: 0 4px 6px rgba(0,0,0,0.07);
        border: 1px solid var(--border-color);
    }

    .table-custom {
        margin: 0;
        font-size: 0.9rem;
    }

        .table-custom thead {
            background: var(--primary-color);
            color: white;
        }

            .table-custom thead th {
                border: none;
                padding: 1rem 0.75rem;
                font-weight: 600;
                text-transform: uppercase;
                font-size: 0.8rem;
                letter-spacing: 0.5px;
                position: relative;
            }

        .table-custom tbody tr {
            transition: all 0.2s ease;
            border-bottom: 1px solid #f8f9fa;
        }

            .table-custom tbody tr:hover {
                background-color: var(--primary-light);
                transform: scale(1.01);
            }

        .table-custom tbody td {
            padding: 1rem 0.75rem;
            vertical-align: middle;
            border: none;
        }

    .status-badge {
        padding: 0.4rem 0.8rem;
        border-radius: 20px;
        font-size: 0.75rem;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .status-activa {
        background: rgba(40, 167, 69, 0.1);
        color: var(--success-color);
        border: 1px solid rgba(40, 167, 69, 0.2);
    }

    .status-anulada {
        background: rgba(220, 53, 69, 0.1);
        color: var(--danger-color);
        border: 1px solid rgba(220, 53, 69, 0.2);
    }

    .action-buttons {
        display: flex;
        gap: 0.5rem;
        flex-wrap: wrap;
    }

    .btn-action {
        padding: 0.4rem 0.8rem;
        border-radius: 4px;
        text-decoration: none;
        font-size: 0.8rem;
        font-weight: 500;
        transition: all 0.2s ease;
        border: 1px solid transparent;
    }

    .btn-edit {
        background: #17a2b8;
        color: white;
    }

        .btn-edit:hover {
            background: #138496;
            color: white;
            text-decoration: none;
        }

    .btn-details {
        background: #6c757d;
        color: white;
    }

        .btn-details:hover {
            background: #545b62;
            color: white;
            text-decoration: none;
        }

    .btn-delete {
        background: #dc3545;
        color: white;
    }

        .btn-delete:hover {
            background: #c82333;
            color: white;
            text-decoration: none;
        }

    .currency {
        font-weight: 600;
        color: var(--primary-color);
    }

    .table-responsive-custom {
        overflow-x: auto;
        -webkit-overflow-scrolling: touch;
    }

    .empty-state {
        text-align: center;
        padding: 3rem 2rem;
        color: #6c757d;
    }

    .empty-state-icon {
        font-size: 4rem;
        margin-bottom: 1rem;
        opacity: 0.3;
    }
    /* Estilos para la leyenda */
    .legend-container {
        background: white;
        border-radius: 8px;
        padding: 1rem;
        box-shadow: 0 2px 4px rgba(0,0,0,0.05);
        border: 1px solid var(--border-color);
    }

    .legend-header h6 {
        color: var(--text-dark);
        font-weight: 600;
        margin: 0;
    }

    .legend-items {
        display: flex;
        flex-wrap: wrap;
        gap: 1rem;
    }

    .legend-item {
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .legend-text {
        font-size: 0.85rem;
        color: var(--text-dark);
        font-weight: 500;
    }

    /* Estilos para los filtros */
    .filters-container {
        background: white;
        border-radius: 8px;
        padding: 1.5rem;
        margin-bottom: 2rem;
        box-shadow: 0 2px 4px rgba(0,0,0,0.05);
        border: 1px solid var(--border-color);
    }

    .filters-container .form-label {
        font-size: 0.9rem;
        margin-bottom: 0.5rem;
        color: var(--text-dark);
    }

    .filters-container .form-control,
    .filters-container .form-select {
        border: 2px solid var(--border-color);
        border-radius: 6px;
        padding: 0.75rem;
        font-size: 0.9rem;
        transition: all 0.3s ease;
    }

    .filters-container .form-control:focus,
    .filters-container .form-select:focus {
        border-color: var(--primary-color);
        box-shadow: 0 0 0 3px rgba(22, 128, 38, 0.1);
        outline: none;
    }

    .filters-container .btn {
        padding: 0.75rem 1.5rem;
        border-radius: 6px;
        font-weight: 500;
        transition: all 0.3s ease;
    }

    .filters-container .btn-primary {
        background: var(--primary-color);
        border-color: var(--primary-color);
    }

    .filters-container .btn-primary:hover {
        background: var(--primary-dark);
        border-color: var(--primary-dark);
        transform: translateY(-1px);
    }

    .filters-container .btn-outline-secondary {
        border-color: var(--border-color);
        color: var(--text-dark);
    }

    .filters-container .btn-outline-secondary:hover {
        background: var(--border-color);
        border-color: var(--border-color);
        color: var(--text-dark);
    }

    /* Estilos para la paginación */
    .pagination-container {
        background: white;
        border-radius: 8px;
        padding: 1.5rem;
        margin-top: 2rem;
        box-shadow: 0 2px 4px rgba(0,0,0,0.05);
        border: 1px solid var(--border-color);
    }

    .pagination .page-link {
        color: var(--primary-color);
        border: 1px solid var(--border-color);
        padding: 0.5rem 0.75rem;
        margin: 0 2px;
        border-radius: 4px;
        transition: all 0.3s ease;
    }

    .pagination .page-link:hover {
        background-color: var(--primary-light);
        border-color: var(--primary-color);
        color: var(--primary-dark);
        transform: translateY(-1px);
    }

    .pagination .page-item.active .page-link {
        background-color: var(--primary-color);
        border-color: var(--primary-color);
        color: white;
    }

    .pagination .page-item.disabled .page-link {
        color: #6c757d;
        background-color: #f8f9fa;
        border-color: var(--border-color);
    }


    @@media (max-width: 768px) {
        .action-bar {
            flex-direction: column;
            gap: 1rem;
            align-items: stretch;
        }

        .search-box {
            margin-left: 0;
            max-width: none;
        }

        .export-buttons {
            justify-content: center;
            flex-wrap: wrap;
        }

        .export-buttons .btn {
            flex: 1;
            min-width: 120px;
        }

        .page-title {
            font-size: 2rem;
        }

        .action-buttons {
            flex-direction: column;
        }

        .filters-container .row {
            gap: 1rem;
        }

        .filters-container .col-md-3 {
            width: 100%;
        }

        .filters-container .d-flex {
            justify-content: stretch;
        }

        .filters-container .btn {
            flex: 1;
        }

        .pagination-container .row {
            flex-direction: column;
            gap: 1rem;
        }

        .pagination-container .col-md-6 {
            width: 100%;
            text-align: center;
        }

        .pagination {
            justify-content: center !important;
        }

        .pagination .page-link {
            padding: 0.4rem 0.6rem;
            font-size: 0.9rem;
        }
    }
</style>

<div class="container-fluid">
    <div class="page-header">
        <div class="container">
            <h1 class="page-title">
                <i class="fas fa-file-invoice-dollar me-3"></i>
                Gestión de Facturas
            </h1>
            <p class="page-subtitle">Sistema de administración y control de documentos tributarios electrónicos</p>
        </div>
    </div>

    <div class="action-bar">
       @*  <a asp-page="Create" class="btn-primary-custom">
            <i class="fas fa-plus"></i>
            Nueva Factura
        </a> *@

        <div class="search-box">
            <i class="fas fa-search search-icon"></i>
            <input type="text" class="search-input" placeholder="Buscar por número de control, código o cliente..." id="searchInput">
        </div>

        <!-- Botones de Exportación -->
        <div class="export-buttons">
            <a asp-page="./Index" asp-page-handler="GenerarReportePDF" 
               asp-route-FechaInicio="@Model.FechaInicio?.ToString("yyyy-MM-dd")" 
               asp-route-FechaFin="@Model.FechaFin?.ToString("yyyy-MM-dd")" 
               asp-route-EstadoFiltro="@Model.EstadoFiltro"
               class="btn btn-danger me-2" title="Exportar a PDF"
               onclick="return confirmarGeneracionReporte('pdf')">
                <i class="fas fa-file-pdf me-2"></i>PDF
            </a>
            <a asp-page="./Index" asp-page-handler="GenerarReporteExcel" 
               asp-route-FechaInicio="@Model.FechaInicio?.ToString("yyyy-MM-dd")" 
               asp-route-FechaFin="@Model.FechaFin?.ToString("yyyy-MM-dd")" 
               asp-route-EstadoFiltro="@Model.EstadoFiltro"
               class="btn btn-success" title="Exportar a Excel"
               onclick="return confirmarGeneracionReporte('excel')">
                <i class="fas fa-file-excel me-2"></i>Excel
            </a>
        </div>
    </div>

    <!-- Mensajes de notificación -->
    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="fas fa-exclamation-triangle me-2"></i>
            @TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="fas fa-check-circle me-2"></i>
            @TempData["Success"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <!-- Filtros -->
    <div class="filters-container" style="background: white; border-radius: 8px; padding: 1.5rem; margin-bottom: 2rem; box-shadow: 0 2px 4px rgba(0,0,0,0.05); border: 1px solid var(--border-color);">
        <form method="get" class="row g-3 align-items-end">
            <div class="col-md-3">
                <label for="FechaInicio" class="form-label fw-semibold text-muted">
                    <i class="fas fa-calendar-alt me-2"></i>Fecha Inicio
                </label>
                <input type="date" class="form-control" id="FechaInicio" name="FechaInicio" 
                       value="@(Model.FechaInicio?.ToString("yyyy-MM-dd") ?? DateTime.Today.ToString("yyyy-MM-dd"))" />
            </div>
            <div class="col-md-3">
                <label for="FechaFin" class="form-label fw-semibold text-muted">
                    <i class="fas fa-calendar-alt me-2"></i>Fecha Fin
                </label>
                <input type="date" class="form-control" id="FechaFin" name="FechaFin" 
                       value="@(Model.FechaFin?.ToString("yyyy-MM-dd") ?? DateTime.Today.ToString("yyyy-MM-dd"))" />
            </div>
            <div class="col-md-3">
                <label for="EstadoFiltro" class="form-label fw-semibold text-muted">
                    <i class="fas fa-filter me-2"></i>Estado
                </label>
                <select class="form-select" id="EstadoFiltro" name="EstadoFiltro">
                    <option value="">Todos los estados</option>
                    <option value="activa" selected="@(Model.EstadoFiltro == "activa")">Activas</option>
                    <option value="anulada" selected="@(Model.EstadoFiltro == "anulada")">Anuladas</option>
                </select>
            </div>
            <div class="col-md-3">
                <div class="d-flex gap-2">
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-search me-2"></i>Filtrar
                    </button>
                    <a href="@Url.Page("./Index")" class="btn btn-outline-secondary">
                        <i class="fas fa-times me-2"></i>Limpiar
                    </a>
                </div>
            </div>
        </form>
    </div>

    <div class="table-container">
        <div class="legend-items">
            <div class="legend-item">
                <span class="badge bg-primary">CF</span>
                <span class="legend-text">Consumidor Final</span>
            </div>
            <div class="legend-item">
                <span class="badge bg-success">CCF</span>
                <span class="legend-text">Comprobante de Crédito Fiscal</span>
            </div>
           @*  <div class="legend-item">
                <span class="badge bg-warning text-dark">NC</span>
                <span class="legend-text">Nota de Crédito</span>
            </div> *@
            <div class="legend-item">
                <span class="badge bg-info">SE</span>
                <span class="legend-text">Sujeto Excluido</span>
            </div>
            <div class="legend-item">
                <span class="badge bg-secondary">DON</span>
                <span class="legend-text">Donación</span>
            </div>
        </div>
    </div>
        <div class="table-responsive-custom">
            @if (Model.Factura != null && Model.Factura.Any())
            {
            <table class="table table-custom" id="facturasTable">
                <thead>
                    <tr>
                        <th>Estado</th>
                        <th>Fecha</th>
                            <th>Tipo DTE</th>
                        <th>Código Generación</th>
                        <th>Número Control</th>
                       
                        <th>Sello Recepción</th>
                        <th>Sello Anulación</th>
                        <th>Total Gravado</th>
                        <th>Total Exento</th>
                        <th>IVA</th>
                        <th>Total a Pagar</th>
                        <th>Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Factura)
                    {
                    <tr>
                        <td>
                            <span class="status-badge @(item.Anulada ? " status-anulada" : "status-activa" )">
                                @(item.Anulada ? "Anulada" : "Activa")
                            </span>
                        </td>
                        <td>
                            <strong>@Html.DisplayFor(modelItem => item.Fecha)</strong>
                        </td>
                         <td>
                                    @{
                                        var tipoDTEText = item.TipoDTE switch
                                        {
                                            1 => "CF",
                                            3 => "CCF",
                                            5 => "NC",
                                            14 => "SE",
                                            15 => "DON",
                                            _ => item.TipoDTE.ToString()
                                        };
                                        var tipoDTEClass = item.TipoDTE switch
                                        {
                                            1 => "bg-primary",
                                            3 => "bg-success",
                                            5 => "bg-warning",
                                            14 => "bg-info",
                                            15 => "bg-secondary",
                                            _ => "bg-secondary"
                                        };
                                    }
                                    <span class="badge @tipoDTEClass" title="@item.TipoDTE">@tipoDTEText</span>
                        </td>
                        <td>
                            <code>@Html.DisplayFor(modelItem => item.CodigoGeneracion)</code>
                        </td>
                        <td>
                            <span class="fw-bold">@Html.DisplayFor(modelItem => item.NumeroControl)</span>
                        </td>
                       
                        <td>
                            @if (!string.IsNullOrEmpty(item.SelloRecepcion))
                            {
                            <i class="fas fa-check-circle text-success me-1"></i>
                            <small>@Html.DisplayFor(modelItem => item.SelloRecepcion)</small>
                            }
                            else
                            {
                            <i class="fas fa-clock text-warning me-1"></i>
                            <small class="text-muted">Pendiente</small>
                            }
                        </td>
                        <td>
                            @if (!string.IsNullOrEmpty(item.SelloAnulacion))
                            {
                            <i class="fas fa-times-circle text-danger me-1"></i>
                            <small>@Html.DisplayFor(modelItem => item.SelloAnulacion)</small>
                            }
                            else
                            {
                            <span class="text-muted">—</span>
                            }
                        </td>
                        <td>
                            <span class="currency">$@Html.DisplayFor(modelItem => item.TotalGravado)</span>
                        </td>
                        <td>
                            <span class="currency">$@Html.DisplayFor(modelItem => item.TotalExento)</span>
                        </td>
                        <td>
                            <span class="currency">$@Html.DisplayFor(modelItem => item.TotalIva)</span>
                        </td>
                        <td>
                            <strong class="currency" style="font-size: 1.1em;">$@Html.DisplayFor(modelItem => item.TotalPagar)</strong>
                        </td>
                        <td>
                            <div class="action-buttons">
                                
                                
                                        <div class="d-flex gap-1 flex-wrap">
                                        <button class="btn btn-outline-danger btn-sm" onclick="verPDF(@item.FacturaId)" title="Ver PDF">
                                                PDF
                                            </button>
                                        </div>
                                
                                    @Html.AntiForgeryToken()

                                    <a href="javascript:void(0)" onclick="confirmarAnulacion(@item.FacturaId)" class="btn-action btn-delete" title="ANULAR">
                                        <i class="fas fa-ban"></i>
                                    </a>
                            </div>
                        </td>
                    </tr>
                    }
                </tbody>
            </table>

            <!-- Paginación -->
            @if (Model.TotalPaginas > 1)
            {
                <div class="pagination-container" style="background: white; border-radius: 8px; padding: 1.5rem; margin-top: 2rem; box-shadow: 0 2px 4px rgba(0,0,0,0.05); border: 1px solid var(--border-color);">
                    <div class="row align-items-center">
                        <div class="col-md-6">
                            <p class="mb-0 text-muted">
                                <i class="fas fa-info-circle me-2"></i>
                                Mostrando @(((Model.PaginaActual - 1) * Model.RegistrosPorPagina) + 1) - 
                                @Math.Min(Model.PaginaActual * Model.RegistrosPorPagina, Model.TotalRegistros) 
                                de @Model.TotalRegistros registros
                            </p>
                        </div>
                        <div class="col-md-6">
                            <nav aria-label="Navegación de páginas">
                                <ul class="pagination justify-content-end mb-0">
                                    <!-- Botón Anterior -->
                                    @if (Model.PaginaActual > 1)
                                    {
                                        <li class="page-item">
                                            <a class="page-link" href="@Url.Page("./Index", new { 
                                                FechaInicio = Model.FechaInicio?.ToString("yyyy-MM-dd"), 
                                                FechaFin = Model.FechaFin?.ToString("yyyy-MM-dd"), 
                                                EstadoFiltro = Model.EstadoFiltro, 
                                                PaginaActual = Model.PaginaActual - 1 
                                            })">
                                                <i class="fas fa-chevron-left"></i>
                                            </a>
                                        </li>
                                    }
                                    else
                                    {
                                        <li class="page-item disabled">
                                            <span class="page-link">
                                                <i class="fas fa-chevron-left"></i>
                                            </span>
                                        </li>
                                    }

                                    <!-- Números de página -->
                                    @{
                                        int inicio = Math.Max(1, Model.PaginaActual - 2);
                                        int fin = Math.Min(Model.TotalPaginas, Model.PaginaActual + 2);
                                    }

                                    @if (inicio > 1)
                                    {
                                        <li class="page-item">
                                            <a class="page-link" href="@Url.Page("./Index", new { 
                                                FechaInicio = Model.FechaInicio?.ToString("yyyy-MM-dd"), 
                                                FechaFin = Model.FechaFin?.ToString("yyyy-MM-dd"), 
                                                EstadoFiltro = Model.EstadoFiltro, 
                                                PaginaActual = 1 
                                            })">1</a>
                                        </li>
                                        @if (inicio > 2)
                                        {
                                            <li class="page-item disabled">
                                                <span class="page-link">...</span>
                                            </li>
                                        }
                                    }

                                    @for (int i = inicio; i <= fin; i++)
                                    {
                                        <li class="page-item @(i == Model.PaginaActual ? "active" : "")">
                                            <a class="page-link" href="@Url.Page("./Index", new { 
                                                FechaInicio = Model.FechaInicio?.ToString("yyyy-MM-dd"), 
                                                FechaFin = Model.FechaFin?.ToString("yyyy-MM-dd"), 
                                                EstadoFiltro = Model.EstadoFiltro, 
                                                PaginaActual = i 
                                            })">@i</a>
                                        </li>
                                    }

                                    @if (fin < Model.TotalPaginas)
                                    {
                                        @if (fin < Model.TotalPaginas - 1)
                                        {
                                            <li class="page-item disabled">
                                                <span class="page-link">...</span>
                                            </li>
                                        }
                                        <li class="page-item">
                                            <a class="page-link" href="@Url.Page("./Index", new { 
                                                FechaInicio = Model.FechaInicio?.ToString("yyyy-MM-dd"), 
                                                FechaFin = Model.FechaFin?.ToString("yyyy-MM-dd"), 
                                                EstadoFiltro = Model.EstadoFiltro, 
                                                PaginaActual = Model.TotalPaginas 
                                            })">@Model.TotalPaginas</a>
                                        </li>
                                    }

                                    <!-- Botón Siguiente -->
                                    @if (Model.PaginaActual < Model.TotalPaginas)
                                    {
                                        <li class="page-item">
                                            <a class="page-link" href="@Url.Page("./Index", new { 
                                                FechaInicio = Model.FechaInicio?.ToString("yyyy-MM-dd"), 
                                                FechaFin = Model.FechaFin?.ToString("yyyy-MM-dd"), 
                                                EstadoFiltro = Model.EstadoFiltro, 
                                                PaginaActual = Model.PaginaActual + 1 
                                            })">
                                                <i class="fas fa-chevron-right"></i>
                                            </a>
                                        </li>
                                    }
                                    else
                                    {
                                        <li class="page-item disabled">
                                            <span class="page-link">
                                                <i class="fas fa-chevron-right"></i>
                                            </span>
                                        </li>
                                    }
                                </ul>
                            </nav>
                        </div>
                    </div>
                </div>
            }
            }
            else
            {
            <div class="empty-state">
                <div class="empty-state-icon">
                    <i class="fas fa-file-invoice"></i>
                </div>
                <h3>No hay facturas registradas</h3>
                <p>Comienza creando tu primera factura electrónica</p>
                <a asp-page="Create" class="btn-primary-custom mt-3">
                    <i class="fas fa-plus"></i>
                    Crear Primera Factura
                </a>
            </div>
            }
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const searchInput = document.getElementById('searchInput');
        const table = document.getElementById('facturasTable');

        if (searchInput && table) {
            searchInput.addEventListener('keyup', function() {
                const searchTerm = this.value.toLowerCase();
                const rows = table.getElementsByTagName('tbody')[0].getElementsByTagName('tr');

                Array.from(rows).forEach(function(row) {
                    const text = row.textContent.toLowerCase();
                    row.style.display = text.includes(searchTerm) ? '' : 'none';
                });
            });
        }
    });

           function confirmarAnulacion(facturaId) {
        if (confirm('¿Está seguro que desea anular esta factura?')) {
            // Hacer la petición AJAX
            fetch('/facturas/Delete?id=' + facturaId, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                }
            })
            .then(response => {
                if (response.ok) {
                    alert('Factura anulada exitosamente');
                    location.reload(); // Recargar la página para ver los cambios
                } else {
                    alert('Error al anular la factura');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Error al procesar la solicitud');
            });
        }
    
    }

     // Función para ver PDF
        function verPDF(id) {
            // Mostrar indicador de carga
            const button = event.target;
            const originalText = button.innerHTML;
            button.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Generando...';
            button.disabled = true;

            // Hacer la llamada al método para generar el PDF
             window.open(`@Url.Page("./Facturas")?handler=GenerarPdf&id=${id}`, '_blank');

            // Restaurar el botón después de un breve delay
            setTimeout(() => {
                button.innerHTML = originalText;
                button.disabled = false;
            }, 2000);
        }

        // Función para mostrar mensaje de confirmación al generar reportes
        function confirmarGeneracionReporte(tipo) {
            const mensaje = tipo === 'pdf' ? 
                '¿Está seguro que desea generar el reporte PDF?' : 
                '¿Está seguro que desea generar el reporte Excel?';
            
            if (confirm(mensaje)) {
                // Mostrar indicador de carga
                const botones = document.querySelectorAll('.export-buttons .btn');
                botones.forEach(btn => {
                    btn.disabled = true;
                    btn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Generando...';
                });

                // El enlace se ejecutará automáticamente
                return true;
            }
            return false;
        }
</script>

<!-- Font Awesome para los iconos -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">